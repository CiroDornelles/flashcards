"pergunta","resposta"
"Como uma função shell é definida no Bash?","Uma função shell é definida como `fname () compound-command [redirection]` ou `function fname [()] compound-command [redirection]`."
"Qual a diferença entre uma função shell e um script shell em termos de execução?","Uma função shell é executada no contexto do shell atual"," sem criar um novo processo. Um script shell é executado em um novo processo (subshell)."
"Como os argumentos são passados para uma função shell?","Os argumentos passados para a função tornam-se os parâmetros posicionais (`$1`"," `$2`"," etc.) durante sua execução."
"O que acontece com o parâmetro especial `#` dentro de uma função shell?","O parâmetro especial `#` (número de argumentos) é atualizado para refletir a mudança dentro da função."
"O que acontece com o parâmetro especial `0` dentro de uma função shell?","O parâmetro especial `0` (nome do script/shell) permanece inalterado dentro de uma função shell."
"Como declarar variáveis locais dentro de uma função shell?","Variáveis locais podem ser declaradas com o comando embutido `local`."
"Qual o escopo de uma variável local declarada dentro de uma função?","O escopo de uma variável local é restrito àquela função e seus filhos (incluindo as funções que ela chama)."
"O que é ""dynamic scoping"" no Bash em relação a variáveis?","Com o ""dynamic scoping"""," variáveis visíveis e seus valores são um resultado da sequência de chamadas de função que levaram à execução da função atual."
"Como o comando `unset` se comporta com variáveis locais em funções?","Se uma variável for local ao escopo atual"," `unset` a removerá. Caso contrário"," `unset` se referirá à variável encontrada em qualquer escopo de chamada."
"Qual variável pode ser usada para limitar a profundidade de aninhamento de funções?","A variável `FUNCNEST` pode ser usada para limitar a profundidade de aninhamento de funções."
"Qual o propósito do comando embutido `return` dentro de uma função?","O comando `return` faz com que uma função pare de executar e retorne o valor especificado para seu chamador."
"Como listar nomes e definições de funções shell?","Nomes e definições de funções podem ser listados com a opção `-f` dos comandos embutidos `declare` ou `typeset`."
"Como exportar funções para processos shell filhos?","Funções podem ser exportadas usando a opção `-f` do comando embutido `export`."
"Como uma definição de função pode ser excluída?","Uma definição de função pode ser excluída usando a opção `-f` do comando embutido `unset`."
"As funções shell podem ser recursivas?","Sim"," funções podem ser recursivas. A variável `FUNCNEST` pode ser usada para limitar a profundidade das chamadas recursivas."
