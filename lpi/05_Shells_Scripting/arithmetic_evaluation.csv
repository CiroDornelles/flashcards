"pergunta","resposta"
"Como as expressões aritméticas são avaliadas no Bash?","As expressões aritméticas são avaliadas em inteiros de largura fixa"," sem verificação de estouro"," embora a divisão por 0 seja capturada e sinalizada como um erro."
"Quais são os operadores aritméticos e sua precedência no Bash?","Os operadores e sua precedência são os mesmos da linguagem C"," incluindo: `++`"," `--` (pós-incremento/decremento); `-`"," `+` (unário); `++`"," `--` (pré-incremento/decremento); `!`"," `~` (negação lógica/bitwise); `**` (exponenciação); `*`"," `/`"," `%` (multiplicação"," divisão"," resto); `+`"," `-` (adição"," subtração); `<<`"," `>>` (deslocamento de bits); `<=`"," `>=`"," `<`"," `>` (comparação); `==`"," `!=` (igualdade/desigualdade); `&` (AND bitwise); `^` (OR exclusivo bitwise); `|` (OR bitwise); `&&` (AND lógico); `||` (OR lógico); `?:` (condicional); `=`"," `*=`"," `/=`"," etc. (atribuição); `","` (vírgula)."
"Como as variáveis shell são usadas como operandos em expressões aritméticas?","Variáveis shell são permitidas como operandos; a expansão de parâmetros é realizada antes da avaliação da expressão. Variáveis shell também podem ser referenciadas por nome sem usar a sintaxe de expansão de parâmetros."
"Como os valores nulos ou não definidos de variáveis são tratados em expressões aritméticas?","Uma variável shell que é nula ou não definida avalia para 0 quando referenciada por nome sem usar a sintaxe de expansão de parâmetros."
"Como os inteiros constantes são interpretados no Bash?","Constantes com um `0` inicial são interpretadas como números octais. Um `0x` ou `0X` inicial denota hexadecimal. Caso contrário"," os números assumem o formato `[base#]n`"," onde `base` é um número decimal entre 2 e 64."
